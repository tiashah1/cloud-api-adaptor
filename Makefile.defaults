YQ_COMMAND ?= yq

VERSIONS_SRC := $(abspath $(dir $(lastword $(MAKEFILE_LIST))))/versions.yaml

ifeq (, $(shell command -v $(YQ_COMMAND) 2> /dev/null))
$(error "$(YQ_COMMAND) not found, consider doing snap install yq")
endif

CHECKSUM := 82b6513dc067a0fd3941dc11261ae198

CALCULATE_CHECKSUM := $(shell md5sum $(YQ_COMMAND) | cut -d ' ' -f 1 )
$(info "The checksum for $(YQ_COMMAND) is: $(CALCULATE_CHECKSUM)")

YQ_PATH := cloud-api-adaptor/podvm/bin/yq
TEST := $(shell $(YQ_PATH) --version)
$(info "Version of $(YQ_PATH) is: $(TEST)")

TEST_2 := $(shell bin/yq --version)
$(info "The version of bin/yq is: $(TEST_2)")

YQ_VERSION := $(shell $(YQ_PATH) --version)
$(info "The version of $(YQ_PATH) is: $(YQ_VERSION))

ifneq ($(CHECKSUM), $(CALCULATE_CHECKSUM))
$(error "yq version is incorrect. Expected checksum: $(CHECKSUM) but actual checksum: $(CALCULATE_CHECKSUM))
endif

YQ_MAJOR_VERSION := $(shell $(YQ_COMMAND) --version | sed -nE 's/.* v?([0-9]+).*/\1/p')

ifneq (4, $(YQ_MAJOR_VERSION))
$(error "yq major version should be 4, is: $(YQ_MAJOR_VERSION)")
endif

define query
$(or $(shell $(YQ_COMMAND) '.$(1) | select(. != null)' $(VERSIONS_SRC)), \
	$(error $(1) is not set, and could not be automatically set from $(VERSIONS_SRC)))
endef

ubuntu_RELEASE ?= focal
centos_RELEASE ?= stream-9
rhel_RELEASE ?= 9

ubuntu_amd64_IMAGE_URL := $(call query,cloudimg.ubuntu.$(ubuntu_RELEASE).amd64.url)
ubuntu_amd64_IMAGE_CHECKSUM := $(call query,cloudimg.ubuntu.$(ubuntu_RELEASE).amd64.checksum)
ubuntu_s390x_IMAGE_URL := $(call query,cloudimg.ubuntu.$(ubuntu_RELEASE).s390x.url)
ubuntu_s390x_IMAGE_CHECKSUM := $(call query,cloudimg.ubuntu.$(ubuntu_RELEASE).s390x.checksum)
centos_amd64_IMAGE_URL := $(call query,cloudimg.centos.$(centos_RELEASE).amd64.url)
centos_amd64_IMAGE_CHECKSUM := $(call query,cloudimg.centos.$(centos_RELEASE).amd64.checksum)
rhel_amd64_IMAGE_URL := $(call query,cloudimg.rhel.$(rhel_RELEASE).amd64.url)
rhel_amd64_IMAGE_CHECKSUM := $(call query,cloudimg.rhel.$(rhel_RELEASE).amd64.checksum)

CAA_SRC := $(or $(CAA_SRC),$(call query,git.cloud-api-adaptor.url))
CAA_SRC_REF := $(or $(CAA_SRC_REF),$(call query,git.cloud-api-adaptor.reference))
KATA_SRC := $(or $(KATA_SRC),$(call query,git.kata-containers.url))
KATA_SRC_REF := $(or $(KATA_SRC_REF),$(call query,git.kata-containers.reference))
GO_VERSION := $(or $(GO_VERSION),$(call query,tools.golang))
PROTOC_VERSION := $(or $(PROTOC_VERSION),$(call query,tools.protoc))
RUST_VERSION := $(or $(RUST_VERSION),$(call query,tools.rust))
SKOPEO_REPO := $(or $(SKOPEO_REPO),$(call query,git.skopeo.url))
SKOPEO_VERSION := $(or $(SKOPEO_VERSION),$(call query,git.skopeo.reference))
UMOCI_REPO := $(or $(UMOCI_REPO),$(call query,git.umoci.url))
UMOCI_VERSION := $(or $(UMOCI_VERSION),$(call query,git.umoci.reference))
GUEST_COMPONENTS_REPO := $(or $(GUEST_COMPONENTS_REPO),$(call query,git.guest-components.url))
GUEST_COMPONENTS_VERSION := $(or $(GUEST_COMPONENTS_VERSION),$(call query,git.guest-components.reference))
PAUSE_REPO :=  $(or $(PAUSE_REPO),$(call query,oci.pause.registry))
PAUSE_VERSION := $(or $(PAUSE_VERSION),$(call query,oci.pause.tag))
